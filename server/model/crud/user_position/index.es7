const _ = require('lodash')
    , b = require('./binding.es7')
    , c = require('./create.es7')
    , r = require('./read.es7')
    , u = require('./update.es7')
    , d = require('./delete.es7')
    , a = require('./annotation.es7')
    , s = require('./schema.es7')
    , guard = require('../../lib/guard.es7')
    , logging = require('../../../lib/logging.es7')
    , modName = require('../../../../lib/module_name.es7')
    , ciT = require('../../lib/crud_interface_transform.es7');


const moduleName = modName.generateServer(__dirname, __filename)
    , log = logging.getLoggerModule(moduleName);


const gd = guard.create(log);

const rawExports = {
    create: gd(
        c.create, 'create',
        [a.QueryDateTime, a.Id, null]
    ),
    findById: gd(
        r.findById, 'findById',
        [a.QueryDateTime, a.Id, null]
    ),
    findNearbyLimitedByPointCoordinates: gd(
        r.findNearbyLimitedByPointCoordinates, 'findNearbyLimitedByPointCoordinates',
        [a.QueryDateTime, a.PointCoordinates, a.Distance, null]
    ),
    findNearbyUnLimitedByPointCoordinates: gd(
        r.findNearbyUnLimitedByPointCoordinates, 'findNearbyUnLimitedByPointCoordinates',
        [a.QueryDateTime, a.PointCoordinates, a.Distance, null]
    ),
    overwritePositionById: gd(
        u.overwritePositionById, 'overwritePositionById',
        [a.QueryDateTime, a.Id, a.PointCoordinates, null]
    ),
    deleteById: gd(
        d.deleteById, 'deleteById',
        [a.QueryDateTime, a.Id, null]
    ),
};


const rE = rawExports;

module.exports = {
    binding: b,
    model: s.model,
    raw: rawExports,
    web: {
        findNearbyLimitedByPointCoordinates:
            _.flowRight(ciT.injectQueryDateTime)(rE.findNearbyLimitedByPointCoordinates),
        overwritePositionById:
            _.flowRight(ciT.injectQueryDateTime)(rE.overwritePositionById),
    },
};
