const s = require('./schema.es7')
    , logging = require('../../../lib/logging.es7')
    , flowEvent = require('../../lib/flow_event.es7')
    , modName = require('../../../../lib/module_name.es7')
    , flowController = require('../../lib/flow_controller.es7')
    , { normalize: ccn, transform: cct } = require('../../lib/crud_callback.es7');


const moduleName = modName.generateServer(__dirname, __filename)
    , log = logging.getLoggerModule(moduleName)
    , onEvent = flowController.getOnEvent(moduleName);


const UserPosition = s.model;


const deleteById = (queryDateTime, userId, callback) =>
    UserPosition.findOneAndRemove(
        { '_id': userId },
        ccn(log, 'deleteById', [cct.findOneAndRemove, cct.docToObject], callback)
    );

onEvent(
    flowEvent.USER_DELETED,
    'deleteById',
    (queryDateTime, deletedUser) => (cb) =>
        deleteById(queryDateTime, deletedUser.id, cb)
);


module.exports = {
    deleteById: deleteById,
};
