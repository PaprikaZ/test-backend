const s = require('./schema.es7')
    , cfg = require('../../../config.json')
    , logging = require('../../../lib/logging.es7')
    , modName = require('../../../../lib/module_name.es7')
    , { normalize: ccn, transform: cct } = require('../../lib/crud_callback.es7');


const moduleName = modName.generateServer(__dirname, __filename)
    , log = logging.getLoggerModule(moduleName);


const User = s.model;


const setDateBirthById = (queryDateTime, userId, birthDate, callback) =>
    User.updateOne(
        {
            '_id': userId,
            'dateBirth': { $exists: false },
        },
        { $set: { 'dateBirth': birthDate } },
        ccn(log, 'setDateBirthById', [cct.updateOne], callback)
    );


const setDescriptionById = (queryDateTime, userId, description, callback) =>
    User.updateOne(
        {
            '_id': userId,
            'description': { $exists: false },
        },
        { $set: { 'description': description } },
        ccn(log, 'setDescriptionById', [cct.updateOne], callback)
    );


const updateDescriptionById = (queryDateTime, userId, description, callback) =>
    User.updateOne(
        {
            '_id': userId,
            'description': { $exists: true },
        },
        { $set: { 'description': description } },
        ccn(log, 'setDescriptionById', [cct.updateOne], callback)
    );


const setHomeAddressById = (queryDateTime, userId, address, callback) =>
    User.updateOne(
        {
            '_id': userId,
            'homeAddress.text': { $exists: false },
        },
        { $set: {
            'homeAddress.text': address,
            'homeAddress.last.updateAt': queryDateTime,
        } },
        ccn(log, 'setHomeAddressById', [cct.updateOne], callback)
    );


const updateHomeAddressById = (queryDateTime, userId, address, callback) =>
    User.updateOne(
        {
            '_id': userId,
            'homeAddress.text': { $exists: true },
            'homeAddress.last.updateAt': {
                $lt: new Date(queryDateTime.getTime() - cfg.model.limit.user.addressUpdateIntervalTimeMin)
            }

        },
        { $set: {
            'homeAddress.text': address,
            'homeAddress.last.updateAt': queryDateTime,
        } },
        ccn(log, 'setHomeAddressById', [cct.updateOne], callback)
    );


module.exports = {
    setDateBirthById: setDateBirthById,
    setHomeAddressById: setHomeAddressById,
    updateHomeAddressById: updateHomeAddressById,
    setDescriptionById: setDescriptionById,
    updateDescriptionById: updateDescriptionById,
}
