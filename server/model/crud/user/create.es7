const s = require('./schema.es7')
    , logging = require('../../../lib/logging.es7')
    , flowEvent = require('../../lib/flow_event.es7')
    , modName = require('../../../../lib/module_name.es7')
    , { emitEvent } = require('../../lib/flow_controller.es7')
    , { normalize: ccn, transform: cct } = require('../../lib/crud_callback.es7');


const moduleName = modName.generateServer(__dirname, __filename)
    , log = logging.getLoggerModule(moduleName);


const User = s.model


const createNameNick = (queryDateTime, userId, nickName, callback) =>
    new User({
        '_id': userId,
        'createAt': queryDateTime,
        'nameNick': nickName,
    }).save(ccn(
        log, 'createNameNick', [cct.save, cct.docToObject],
        (err, newUser) => {
            err || emitEvent(flowEvent.USER_NAME_NICK_REGISTERED, queryDateTime, newUser);
            callback(err, newUser);
        }
    ));


module.exports = {
    createNameNick: createNameNick,
}
