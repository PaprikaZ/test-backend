const s = require('./schema.es7')
    , logging = require('../../../lib/logging.es7')
    , flowEvent = require('../../lib/flow_event.es7')
    , modName = require('../../../../lib/module_name.es7')
    , { emitEvent } = require('../../lib/flow_controller.es7')
    , { normalize: ccn, transform: cct } = require('../../lib/crud_callback.es7');


const moduleName = modName.generateServer(__dirname, __filename)
    , log = logging.getLoggerModule(moduleName);


const User = s.model;


const deleteById = (queryDateTime, userId, callback) =>
    User.findOneAndRemove(
        { '_id': userId },
        ccn(
            log, 'deleteById', [cct.findOneAndRemove, cct.docToObject],
            (err, deletedUser) => {
                err || emitEvent(flowEvent.USER_DELETED, queryDateTime, deletedUser);
                callback(err, deletedUser);
            }
        )
    );


module.exports = {
    deleteById: deleteById,
};
